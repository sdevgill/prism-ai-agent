services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: prism-ai-agent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/prism-ai-agent
    env_file:
      - .env
    depends_on:
      - db
      - redis
    environment:
      DJANGO_SETTINGS_MODULE: src.settings
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      SKIP_MIGRATE: ${SKIP_MIGRATE:-false}
      SKIP_COLLECTSTATIC: "false"
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"

  tailwind:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/prism-ai-agent
    env_file:
      - .env
    depends_on:
      - web
    environment:
      DJANGO_SETTINGS_MODULE: src.settings
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      SKIP_MIGRATE: "true"
      SKIP_COLLECTSTATIC: "true"
    command: python manage.py tailwind start

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/prism-ai-agent
    env_file:
      - .env
    depends_on:
      - db
      - redis
    environment:
      DJANGO_SETTINGS_MODULE: src.settings
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      SKIP_MIGRATE: "true"
      SKIP_COLLECTSTATIC: "true"
    command: celery -A src worker -l info

  beat:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/prism-ai-agent
    env_file:
      - .env
    depends_on:
      - db
      - redis
    environment:
      DJANGO_SETTINGS_MODULE: src.settings
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      SKIP_MIGRATE: "true"
      SKIP_COLLECTSTATIC: "true"
    command: celery -A src beat -l info
